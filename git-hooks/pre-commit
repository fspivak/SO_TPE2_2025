#!/bin/bash

# Pre-commit hook para TPE2 Sistemas Operativos
# 1. Compila el proyecto y verifica que no haya warnings ni errores
# 2. Si compila OK, formatea el codigo con clang-format
# 3. Agrega archivos formateados al commit

set -e

echo "========================================"
echo "üîç Pre-commit Hook - TPE2 SO"
echo "========================================"

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Guardar directorio actual
REPO_ROOT=$(git rev-parse --show-toplevel)
cd "$REPO_ROOT"

echo ""
echo "üì¶ Step 1: Compiling project..."
echo "Running: ./compilatodo.sh"
echo ""

# Compilar y capturar output
COMPILE_OUTPUT=$(./compilatodo.sh 2>&1)
COMPILE_EXIT=$?

# Mostrar output de compilacion
echo "$COMPILE_OUTPUT"

# Verificar errores de compilacion
if [ $COMPILE_EXIT -ne 0 ]; then
    echo ""
    echo -e "${RED}‚ùå COMPILATION FAILED${NC}"
    echo "Fix compilation errors before committing."
    exit 1
fi

# Verificar warnings
if echo "$COMPILE_OUTPUT" | grep -qi "warning"; then
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  WARNINGS DETECTED${NC}"
    echo "Fix all warnings before committing."
    echo ""
    echo "Warnings found:"
    echo "$COMPILE_OUTPUT" | grep -i "warning"
    exit 1
fi

echo ""
echo -e "${GREEN}‚úÖ Compilation successful - No errors or warnings${NC}"
echo ""

# Step 2: Formatear codigo
echo "üé® Step 2: Formatting code with clang-format..."
echo ""

# Encontrar todos los archivos .c y .h staged
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(c|h)$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo "No C/H files to format."
else
    echo "Formatting files:"
    for FILE in $STAGED_FILES; do
        if [ -f "$FILE" ]; then
            echo "  - $FILE"
            clang-format -i "$FILE" 2>/dev/null || {
                echo -e "${YELLOW}‚ö†Ô∏è  clang-format not found, skipping formatting${NC}"
                break
            }
            # Re-agregar archivo formateado al stage
            git add "$FILE"
        fi
    done
    echo ""
    echo -e "${GREEN}‚úÖ Code formatted successfully${NC}"
fi

echo ""
echo "========================================"
echo -e "${GREEN}‚úÖ Pre-commit checks PASSED${NC}"
echo "Proceeding with commit..."
echo "========================================"
echo ""

exit 0

